<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 使用扫描机制扫描控制器类，控制器类都在controller包及其子包下 -->
    <context:component-scan base-package="com"></context:component-scan>

    <!--注册类型转换器GoodsConverter-->
<!--    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">-->
<!--        <property name="converters">-->
<!--            <list>-->
<!--             <bean class="com.supreme.converter.GoodsConverter" />-->
<!--                <bean class="com.supreme.converter.GoodsFormatter"/>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->
    <!--注册类型转换器GoodsFormatter-->
    <bean id="formatterService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <list>
                <bean class="com.supreme.converter.GoodsFormatter"/>
            </list>
        </property>
    </bean>
<!--    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>-->
    <mvc:annotation-driven conversion-service="formatterService"></mvc:annotation-driven>
    <bean name="/login" class="com.supreme.controller.LoginController"/>
    <!-- LoginController控制器类，映射到"/register" -->
    <bean name="/register" class="com.supreme.controller.RegisterController"/>

    <!-- annotation-driven用于简化开发的配置，注解DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter -->
    <!-- 使用resources过滤掉不需要dispatcherservlet的资源（即静态资源，例如css、js、html、images）。
        在使用resources时必须使用annotation-driven，否则resources元素会阻止任意控制器被调用 -->
    <!-- 允许css目录下的所有文件可见 -->
    <mvc:resources location="/css/" mapping="/css/**" />
    <!-- 允许html目录下的所有文件可见 -->
    <mvc:resources location="/html/" mapping="/html/**" />
    <!-- 允许css目录下的所有文件可见 -->
    <mvc:resources location="/images/" mapping="/images/**" />

    <mvc:resources location="/js/" mapping="/js/**" />



    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <!-- 配置一个全局拦截器，拦截所有请求 -->
        <!--<bean class="interceptor.TestInterceptor" />-->
        <mvc:interceptor>
            <!-- 配置拦截器作用的路径 -->
            <mvc:mapping path="/**"/>
            <!--定义在<mvc:interceptor>元素中，表示匹配指定路径的请求才进行拦截-->
            <bean class="com.interceptor.Interceptor1"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <!-- 配置拦截器作用的路径 -->
            <mvc:mapping path="/gotoTest"/>
            <!--定义在<mvc:interceptor>元素中，表示匹配指定路径的请求才进行拦截-->
            <bean class="com.interceptor.Interceptor2"/>
        </mvc:interceptor>
         
    </mvc:interceptors>
    <!-- 完成视图的对应 -->
    <!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置逻辑视图的前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!-- 配置逻辑视图的后缀 -->
        <property name="suffix" value=".jsp" />

    </bean>
</beans>